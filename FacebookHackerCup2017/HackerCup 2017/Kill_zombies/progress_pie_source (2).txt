#include <queue>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <complex>
#include <fstream>
#include <cstring>
#include <string>
#include <climits>
using namespace std;

//macros
typedef long long ll;
typedef complex<double> point;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector< vector<int> > vvi;




#define FOR(k,a,b) for(int k=(a); k<=(b); ++k)
#define REP(k,a) for(int k=0; k<(a);++k)
#define SZ(a) int((a).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define MP make_pair
#define INF 1000000001
#define INFLONG 1000000000000000000
#define MOD 1000000007
#define MAX 100
#define ITERS 100
#define MAXM 200000
#define MAXN 1000000
#define _gcd __gcd
#define eps 1e-9
#define PI 3.1415926535897932384626
ifstream fin("txt.in");
ofstream fout("lazy_loading.txt");
void print(int test, string str){
    fout << "Case #" << test << ": " << str << endl;
}
int main() {
    int t;
    fin >> t;
    for(int test = 1; test <= t; test++){
        int p,x,y;
        fin >> p >> x >> y;
        if(x==50 && y==50){
            if(p==0){
                print(test,"white");
            }
            else{
                print(test,"black");
            }
            continue;
        }
        double px = x;
        double py = y;
        double r = sqrt((50-px)*(50-px)+(50-py)*(50-py));
        double ftang = p/100.0*360;
        if(r>=50){
            print(test,"white");
            continue;
        }
        double dx = abs(x-50);
        double dy = abs(y-50);
        double ang=0;
        if(x>=50){
            if(y<=50){

                if(abs(dy)>=eps) ang += 180/PI*atan(dy/dx);
                ang+=90;
                if(abs(dx)<eps) ang=180;
            }
            else{
                ang = 180/PI*atan(dx/dy);
            }
        }
        else if(x<50){
            if(y<=50){
                if(abs(dy)<eps){
                    ang = 270;
                }
                else{
                    ang = 180;
                    ang+=180/PI*atan(dx/dy);
                }
            }
            else if(y>50){
                ang = 270;
                ang += 180/PI*atan(dy/dx);
            }
        }
        if(ang<=ftang){
            print(test,"black");
        }
        else print(test,"white");
    }
    fout.close();
    return 0;
}
